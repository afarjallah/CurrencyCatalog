{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currencies-catalog/currencies-catalog.component.css","webpack:///./src/app/currencies-catalog/currencies-catalog.component.html","webpack:///./src/app/currencies-catalog/currencies-catalog.component.ts","webpack:///./src/app/currency-details/currency-details.component.css","webpack:///./src/app/currency-details/currency-details.component.html","webpack:///./src/app/currency-details/currency-details.component.ts","webpack:///./src/app/currency-search/currency-search.component.css","webpack:///./src/app/currency-search/currency-search.component.html","webpack:///./src/app/currency-search/currency-search.component.ts","webpack:///./src/app/service/currency.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CurrenciesCatalogComponent } from './currencies-catalog/currencies-catalog.component';\r\nimport { CurrencyDetailsComponent } from './currency-details/currency-details.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/currencies', pathMatch: 'full' },\r\n  { path: 'currencies', component: CurrenciesCatalogComponent},\r\n  { path: 'currency/:id', component: CurrencyDetailsComponent }\r\n];\r\n\r\n@NgModule({\r\n  exports: [ RouterModule ],\r\n  imports: [ RouterModule.forRoot(routes) ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CurrenciesCatalogComponent } from './currencies-catalog/currencies-catalog.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { CurrencyDetailsComponent } from './currency-details/currency-details.component';\r\nimport { CurrencySearchComponent } from './currency-search/currency-search.component';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CurrenciesCatalogComponent,\r\n    CurrencyDetailsComponent,\r\n    CurrencySearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    PaginationModule.forRoot(),\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"a {\\r\\n    text-decoration: none;\\r\\n    margin: 6px 0px 6px 0px;\\r\\n}\\r\\n\\r\\n.grid {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.module {\\r\\n    text-align: center;\\r\\n    color: #eee;\\r\\n    height: 100%;\\r\\n    min-width: 120px;\\r\\n    background-color: #607d8b;\\r\\n    border-radius: 2px;\\r\\n  }\\r\\n\\r\\n.module:hover {\\r\\n    background-color: #eee;\\r\\n    cursor: pointer;\\r\\n    color: #607d8b;\\r\\n}\\r\\n\\r\\n.grid-pad {\\r\\n    padding: 10px 0;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <h1>Available currencies</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"grid grid-pad row\\\">\\r\\n  <a *ngFor=\\\"let currency of currencies\\\" routerLink=\\\"/currency/{{currency.id}}\\\" class=\\\"col-6 col-sm-6 col-md-3 col-lg-2 col-xl-2\\\">\\r\\n      <div class=\\\"module\\\">\\r\\n        <div>ID: {{ currency.id }}</div>\\r\\n        <div>Type: {{ currency.attributes.currency_type }}</div> \\r\\n        <div>Symbol:{{ currency.attributes.symbol }}</div>\\r\\n      </div>\\r\\n  </a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <pagination [boundaryLinks]=\\\"true\\\" \\r\\n              firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\" \\r\\n              (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n              [(ngModel)]=\\\"totalItems\\\"></pagination>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Currency } from '../model/currency';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-currencies-catalog',\r\n  templateUrl: './currencies-catalog.component.html',\r\n  styleUrls: ['./currencies-catalog.component.css']\r\n})\r\nexport class CurrenciesCatalogComponent implements OnInit {\r\n  currencies: Currency[] = [];\r\n  totalItems: Number;\r\n\r\n\r\n  constructor(private currencyService: CurrencyService, private _changeDetectionRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.getCurrencies();\r\n  }\r\n\r\n  getCurrencies():void {\r\n    this.currencyService.getCurrencies('1', '100')\r\n      .subscribe(response => {\r\n        this.currencies = response.data;\r\n        this.totalItems = response.meta.pages;\r\n        this._changeDetectionRef.detectChanges();\r\n      });\r\n\r\n    // let first_100_currencies = this.currencyService.getCurrencies('1', '100');\r\n    // let second_100_currencies = this.currencyService.getCurrencies('2', '100');\r\n\r\n    // forkJoin([first_100_currencies, second_100_currencies])\r\n    //   .subscribe(results => {\r\n    //     this.currencies = results[0].data.concat(results[1].data);\r\n    //   });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf='currencyData'> \\r\\n  <h2>{{ currencyData.id }}</h2>\\r\\n  <ul>\\r\\n    <li>code: {{currencyData.attributes.code}}</li>\\r\\n    <li>name: {{currencyData.attributes.name}}</li>\\r\\n    <li>currency_type: {{currencyData.attributes.currency_type}}</li>\\r\\n    <li>code_iso_numeric3: {{currencyData.attributes.code_iso_numeric3}}</li>\\r\\n    <li>code_iso_alpha3: {{currencyData.attributes.code_iso_alpha3}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<button (click)=\\\"goBack()\\\">Go to currencies catalog</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CurrencyService } from '../service/currency.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-currency-details',\r\n  templateUrl: './currency-details.component.html',\r\n  styleUrls: ['./currency-details.component.css']\r\n})\r\nexport class CurrencyDetailsComponent implements OnInit {\r\n\r\n  private currencyData: any;\r\n\r\n  constructor(private currencyService : CurrencyService, private route : ActivatedRoute, private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrency();\r\n  }\r\n  \r\n  getCurrency(): void {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.currencyService.getCurrency(id)\r\n      .subscribe(response => this.currencyData = response.data);\r\n  }\r\n\r\n  goBack():void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" />\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-currency-search',\r\n  templateUrl: './currency-search.component.html',\r\n  styleUrls: ['./currency-search.component.css']\r\n})\r\nexport class CurrencySearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Currency } from '../model/currency';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencyService {\r\n\r\n  private currenciesUrl = 'https://api.openfintech.io/v1/currencies';\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getCurrencies(pageNumber: String, pageSize: String): Observable<any> {\r\n    const url = `${this.currenciesUrl}?page[number]=${pageNumber}&page[size]=${pageSize}`\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getCurrency(id: String): Observable<any> {\r\n    const url = `${this.currenciesUrl}/${id}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  // buildUrl(pageNumber: String, pageSize: String) : String {\r\n  //   return \r\n  // }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}